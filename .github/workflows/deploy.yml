name: Build and Deploy final

on:
  push:
    branches:
      - master  # Change this to your primary branch if needed

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2  # Checks out your code from the GitHub repository

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'  # Specify your Node.js version

      - name: Install Dependencies
        run: npm install  # Install all dependencies

      - name: Build Application
        env:
          NODE_OPTIONS: "--max-old-space-size=4096"  # Increase memory for builds
        run: npm run build  # Build your application

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Ensures this job runs after the 'build' job finishes

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.7  # Uses SSH Action to connect to your server
        with:
          host: ${{ secrets.EC2_HOST }}  # EC2 Public IP address (stored in GitHub Secrets)
          username: ubuntu  # Default EC2 user for Ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}  # Private key for SSH (stored in GitHub Secrets)
          port: 22
          script: |
            echo "Deploying application..."

            PROJECT_DIR="/home/ubuntu/uptime-kuma"

            # Ensure Node.js and npm are installed
            curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
            sudo apt-get install -y nodejs
            node -v
            npm -v

            # Clone the repository if it doesn't exist, or pull latest changes
            if [ ! -d "$PROJECT_DIR" ]; then
              git clone https://github.com/your-username/your-repo-name.git $PROJECT_DIR
            fi
            cd $PROJECT_DIR
            git pull origin master

            # Install dependencies
            npm install

            # Build the application
            NODE_OPTIONS="--max-old-space-size=4096" npm run build

            # Install pm2 globally for process management
            sudo npm install -g pm2

            # Restart application using pm2
            pm2 delete your-app-name || true
            pm2 start npm --name "your-app-name" -- run start
            pm2 save

            echo "Application deployed successfully!"

